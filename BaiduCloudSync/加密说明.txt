就采用现在通用的标准吧
RSA-2048bit + AES-256-CFB

步骤如下：

准备工作:
1. 生成RSA public key和private key
	private key文件由用户保存，在public key丢失的情况下可以使用private key重新生成
	private key文件不可丢失，一旦丢失，may the flames guide the...

普通文件->加密文件
1. 读取RSA public key
2. 随机生成AES key
3. 创建新的加密文件
4. 用RSA加密AES key和IV，并写入到加密文件
5. 用RSA加密源文件的SHA1，并追加写入到加密文件
5. 使用AES加密，把普通文件的数据全部追加写入到加密文件中
6. 加密文件生成完毕

加密文件->普通文件
1. 读取RSA private key
2. 用RSA解密加密过的AES key和IV
3. 用RSA解密加密过的原文件SHA1
4. 用AES解密加密数据，并写入到新的文件中
5. 对比新文件的SHA1和解密过的原文件的SHA1，若相同，则解密成功，否则解密失败

加密和解密过程的简略说明
1. 如果是使用配对的public key和private key，则获得到的AES key是正确的，原文件的SHA1值也是正确的
2. 如果是错误的private key，则获得到的AES key和IV是错误的，原文件的SHA1值也是错误的
3. 使用正确的AES key和IV，可以将加密文件顺利地解密
4. 使用正确的AES key和错误的IV，可以将加密文件除了文件开始的部分数据损坏/丢失之外也顺利地解密
5. 使用错误的AES key和IV，则会解密出错误的数据，计算出来的SHA1和源文件的错误的SHA1值会不同

关于RSA
RSA是一种通用的高可靠性高安全性的非对称加密，现在普遍用于SSL/HTTPS加密过程
目前已确定攻破的位数为768bit，安全位数为1024、2048、3072、4096等等
public key：公钥，用于数据的加密（可以随便分发给他人或者删除）
private key：私钥，用于数据的解密（其内容包含了公钥）

                        ..................................................
注意：该文件请妥善保管，|如果该文件丢失，则会导致所有的加密文件无法解密。|
						~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
						如果该文件被公开，则会导致加密失效（就像把rar的解压密码写在备注上一样）。


加密原理：大素数的次方和取模运算，具体百度
加密过程：原数据 -> public key -> 加密数据 -> private key -> 原数据

关于AES（Advanced Encryption Standard）
AES是一种对称加密的加密标准，是DES的改进版，有几种加密模式，具体还是百度吧
加密过程：原数据 -> key -> 加密数据 -> key -> 原数据
